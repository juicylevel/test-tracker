/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.test.tracker.gui;

import com.mycompany.test.tracker.model.Client;
import com.mycompany.test.tracker.model.Trip;
import com.mycompany.test.tracker.model.RangeValue;
import com.mycompany.test.tracker.model.ClientTrip;
import com.mycompany.test.tracker.service.Autowire;
import com.mycompany.test.tracker.service.ClientService;
import com.mycompany.test.tracker.service.TripReferenceService;
import org.jetbrains.annotations.Nullable;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.Optional;
import java.util.concurrent.atomic.AtomicInteger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;
import java.awt.*;

public class AppJFrame extends javax.swing.JFrame {
    private static final Logger logger = LoggerFactory.getLogger(AppJFrame.class);

    private final ClientService clientService;
    private final TripReferenceService tripReferenceService;
    private final List<String> clientOptionList = new ArrayList<>();

    private String currentClient;

    /**
     * Creates new form AppJFrame
     */
    public AppJFrame() {
        clientService = Autowire.autowire(ClientService.class);
        tripReferenceService = Autowire.autowire(TripReferenceService.class);
        initComponents();
        
        jAddNewClientButton.addActionListener(this::onOpenForm);
        jShowClientCardButton.addActionListener(this::onOpenClientCard);
        generateButton.addActionListener(this::onOpenSearchTrip);
        requirementsList.setModel(getClientOptionsListModel(clientOptionList));
        clientCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(clientService.clientList(Client::getName).toArray(String[]::new)));
        clientCombobox.addActionListener(actionEvent -> {
            if (actionEvent.getSource() == clientCombobox) {
                optionValueChanged(clientCombobox.getSelectedItem());
            } else {
                logger.info("We have another event with {}", actionEvent.getSource());
            }
        });
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                clientService.persist();
                AppJFrame.super.dispose();
                System.exit(0);
            }
        });
        
        // TODO: get data from db
        List<ClientTrip> list = new ArrayList<>();
        list.add(new ClientTrip("Europe", 120));
        list.add(new ClientTrip("Asia", 95));
        list.add(new ClientTrip("America", 75));
        list.add(new ClientTrip("Africa", 40));
        
        ClientTripsChart tripsChart = new ClientTripsChart(list);
        histogramPanel.setLayout(new BorderLayout());
        histogramPanel.add(tripsChart.getChartPanel(), BorderLayout.NORTH);
        //
        
        // TODO: get data from db
        List<RangeValue> dataList = new ArrayList<>();
        dataList.add(new RangeValue("0-10000", 3));
        dataList.add(new RangeValue("10000-15000", 10));
        dataList.add(new RangeValue("15000-20000", 27));
        dataList.add(new RangeValue("20000-25000", 60));
        
        PricesRangeChart rangeChart = new PricesRangeChart(dataList);
        pieChartPanel.setLayout(new BorderLayout());
        pieChartPanel.add(rangeChart.getChartPanel(), BorderLayout.NORTH);
        //
    }
    
    private void onOpenForm(ActionEvent e) {
        CreateClientDialog dialog = new CreateClientDialog(this);
        dialog.setVisible(true);
    }
    
    private void onOpenClientCard(ActionEvent e) {
        ClientCardDialog dialog = new ClientCardDialog(this, (String) this.clientCombobox.getSelectedItem());
        dialog.setVisible(true);
    }
    
    private void onOpenSearchTrip(ActionEvent e) {
        SearchTripDialog dialog = new SearchTripDialog(this);
        dialog.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jAddNewClientButton = new javax.swing.JButton();
        jShowClientCardButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        requirementsList = new javax.swing.JList<>();
        generateButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        clientCombobox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        priceRangeComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tripsComboBox = new javax.swing.JComboBox<>();
        pieChartPanel = new javax.swing.JPanel();
        histogramPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Test Tracker");
        setName("rootFrame"); // NOI18N

        jLabel4.setText("List customers requirements");

        jAddNewClientButton.setText("Add new client");

        jShowClientCardButton.setText("Show client card");
        jShowClientCardButton.setToolTipText("");

        requirementsList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(requirementsList);

        generateButton.setText("Generate");

        jLabel5.setText("Got to see each client page");

        jLabel6.setText("Number of clients for each trip");

        clientCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        clientCombobox.setSelectedIndex(-1);
        clientCombobox.setName("client"); // NOI18N

        jLabel7.setText("Prices range");

        jLabel1.setLabelFor(clientCombobox);
        jLabel1.setText("Clients names");

        jLabel2.setLabelFor(priceRangeComboBox);
        jLabel2.setText("Range of prices");

        priceRangeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0-10000", "10000-15000", "15000-20000", "20000-25000" }));
        priceRangeComboBox.setSelectedIndex(-1);
        priceRangeComboBox.setName("priceRange"); // NOI18N

        jLabel3.setLabelFor(tripsComboBox);
        jLabel3.setText("List of trips");

        tripsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        tripsComboBox.setSelectedIndex(-1);
        tripsComboBox.setName("trip"); // NOI18N

        pieChartPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pieChartPanel.setName("pieChartPanel"); // NOI18N

        javax.swing.GroupLayout pieChartPanelLayout = new javax.swing.GroupLayout(pieChartPanel);
        pieChartPanel.setLayout(pieChartPanelLayout);
        pieChartPanelLayout.setHorizontalGroup(
            pieChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );
        pieChartPanelLayout.setVerticalGroup(
            pieChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );

        histogramPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout histogramPanelLayout = new javax.swing.GroupLayout(histogramPanel);
        histogramPanel.setLayout(histogramPanelLayout);
        histogramPanelLayout.setHorizontalGroup(
            histogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        histogramPanelLayout.setVerticalGroup(
            histogramPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 313, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(clientCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jShowClientCardButton)
                            .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAddNewClientButton, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(priceRangeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tripsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pieChartPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(histogramPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(histogramPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clientCombobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jShowClientCardButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(priceRangeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tripsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(generateButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jAddNewClientButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pieChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private ListModel<String> getClientOptionsListModel(final List<String> strings) {
        return new DefaultListModel<>() {
            public int getSize() {
                return Optional.ofNullable(strings).map(List::size).orElse(0);
            }

            public String getElementAt(int i) {
                return strings.get(i);
            }
        };
    }

    private void optionValueChanged_2(Object selectedItem) {
        logger.info("Reset model with item {} for current client", selectedItem);
        DefaultListModel<String> model = (DefaultListModel<String>) requirementsList.getModel();
        model.clear();
        List<String> clientOptionList = clientService.clientOptionList((String) selectedItem);
        logger.info("update with client options {}", String.join(",", clientOptionList));
        model.setSize(clientOptionList.size());
        AtomicInteger ai = new AtomicInteger(0);
        clientOptionList.forEach(c -> model.setElementAt(c, ai.getAndIncrement()));
    }

    private void optionValueChanged(Object selectedItem) {
        logger.info("Reset model with item {} for current client", selectedItem);
        List<String> newClientOptionList = clientService.clientOptionList((String) selectedItem);
        logger.info("update with client options {}", String.join(",", newClientOptionList));
        clientOptionList.clear();
        clientOptionList.addAll(newClientOptionList);
    }

    @Nullable
    private String getCurrentSelectedClient() {
        logger.info("retrieve client selection");
        return (String) clientCombobox.getSelectedItem();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> clientCombobox;
    private javax.swing.JButton generateButton;
    private javax.swing.JPanel histogramPanel;
    private javax.swing.JButton jAddNewClientButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jShowClientCardButton;
    private javax.swing.JPanel pieChartPanel;
    private javax.swing.JComboBox<String> priceRangeComboBox;
    private javax.swing.JList<String> requirementsList;
    private javax.swing.JComboBox<String> tripsComboBox;
    // End of variables declaration//GEN-END:variables

    public String getCurrentClient() {
        return currentClient;
    }
}
